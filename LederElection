#include <mpi.h>
#include <stdio.h>
#include <iostream>
#include <time.h>

using namespace std;


int main(int argc, char** argv) {

	int size;
	int myrank;

	MPI_Init(&argc, &argv);
	MPI_Comm_rank(MPI_COMM_WORLD, &myrank);
	MPI_Comm_size(MPI_COMM_WORLD, &size);

	int LiderID = 555;
	int NrGenerat;
	int NrPrimit;
	
	MPI_Status status;
	
	NrGenerat = rand() % 100 + 1;
	
	if (myrank == 0) {
		LiderID = 0;

		for (int i = 1; i <= 7; i++){
			MPI_Recv(&NrPrimit, 1, MPI_INT, i, 0, MPI_COMM_WORLD, &status);

			if (NrPrimit > NrGenerat){
				
					NrGenerat = NrPrimit;
					LiderID = i;
				
			}
		}
		cout << "Liderul este " << LiderID << " cu numarul " << NrGenerat<< endl;
	}
	else {
			MPI_Send(&NrGenerat, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);
	}

	MPI_Finalize();

}
